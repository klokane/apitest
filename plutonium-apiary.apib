FORMAT: 1A
HOST: https://plutonium.apiary-services.com

# Plutonium
Plutonium parsing service provides parsing of API description formats (namely API Blueprint, but also others) "as a service".

## Media Types
The API uses [content negotiation](https://en.wikipedia.org/wiki/Content_negotiation) heavily. Send requests with the `Content-Type` header set to the right input media type and use the `Accept` header to select desired output as a response.

### Resource State Representation

```
application/hal+json
```

Where applicable this API uses the [HAL+JSON](https://github.com/mikekelly/hal_specification/blob/master/hal_specification.md) media type to represent resource states and to provide available affordances.

### Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used. Error responses use the [vnd.error](https://github.com/blongden/vnd.error) media type.

## Data Structures

### Input Types (enum)

#### Members
+ `text/vnd.apiblueprint`
+ `text/vnd.legacyblueprint`
+ `application/swagger+json`
+ `application/swagger+yaml`

### Transformation Instruction (object)
+ input_document (string, required)
+ input_type (Input Types, required)
+ output_type (string, required)
+ options (object, optional)
    + source_map: false (boolean, default) - whether or not to include source maps

### Transformation Result (object)
+ output_type (string, required)
+ output_document (string)
+ meta (object, optional)
    + transformation_time (string) - amount of time taken by parsing
    + input_size (number) - the length of the input document in octets
    + output_size (number) - the length of the result document in octets

### Validation Instruction (object)
+ input_document (string, required)
+ input_type (Input Types, required)

## Service Root [/]
API entry point.

This resource does not have any attributes, instead it provides list of available affordances.

### Affordances
- `parse` - Parse an API description

    See _API Description Parser_ resource's _Parser_ action for details.

- `compose` - Composes an API description

    See _API Description Composer_ resource's _Compose_ action for details.

- `transform` - Transforms API description to AST or vice versa

    See _API Description formats transformation_ resource's _Transform_ action for details.

### List [GET]

+ Relation: index

+ Response 200 (application/hal+json)
    + Headers

            Link: <http://docs.plutonium.apiary.io>; rel="profile"

    + Body

            {
                "_links": {
                    "self": {"href": "/"},
                    "transform": {"href": "/transform"},
                    "parse": {"href": "/parser"},
                    "compose": {"href": "/composer"},
                    "validate": {"href": "/validate"}
                }
            }

### Transform [POST /transform]

+ Request Transform API Blueprint without warning or error into JSON API Elements without version (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Hello API\"\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"classes\": [\n              \"resourceGroup\"\n            ],\n            \"title\": \"\"\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"meta\": {\n                \"title\": \"\"\n              },\n              \"attributes\": {\n                \"href\": \"/message\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": \"\"\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": \"GET\"\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": \"200\",\n                            \"headers\": {\n                              \"element\": \"httpHeaders\",\n                              \"content\": [\n                                {\n                                  \"element\": \"member\",\n                                  \"content\": {\n                                    \"key\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"Content-Type\"\n                                    },\n                                    \"value\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"text/plain\"\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          \"content\": [\n                            {\n                              \"element\": \"asset\",\n                              \"meta\": {\n                                \"classes\": [\n                                  \"messageBody\"\n                                ]\n                              },\n                              \"attributes\": {\n                                \"contentType\": \"text/plain\"\n                              },\n                              \"content\": \"Hello World!\\n\"\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint without warning or error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Hello API\"\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"classes\": [\n              \"resourceGroup\"\n            ],\n            \"title\": \"\"\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"meta\": {\n                \"title\": \"\"\n              },\n              \"attributes\": {\n                \"href\": \"/message\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": \"\"\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": \"GET\"\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": \"200\",\n                            \"headers\": {\n                              \"element\": \"httpHeaders\",\n                              \"content\": [\n                                {\n                                  \"element\": \"member\",\n                                  \"content\": {\n                                    \"key\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"Content-Type\"\n                                    },\n                                    \"value\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"text/plain\"\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          \"content\": [\n                            {\n                              \"element\": \"asset\",\n                              \"meta\": {\n                                \"classes\": [\n                                  \"messageBody\"\n                                ]\n                              },\n                              \"attributes\": {\n                                \"contentType\": \"text/plain\"\n                              },\n                              \"content\": \"Hello World!\\n\"\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint without warning or error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"api\"\n            }\n          ]\n        },\n        \"title\": {\n          \"element\": \"string\",\n          \"content\": \"Hello API\"\n        }\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"classes\": {\n              \"element\": \"array\",\n              \"content\": [\n                {\n                  \"element\": \"string\",\n                  \"content\": \"resourceGroup\"\n                }\n              ]\n            },\n            \"title\": {\n              \"element\": \"string\",\n              \"content\": \"\"\n            }\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"meta\": {\n                \"title\": {\n                  \"element\": \"string\",\n                  \"content\": \"\"\n                }\n              },\n              \"attributes\": {\n                \"href\": {\n                  \"element\": \"string\",\n                  \"content\": \"/message\"\n                }\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": {\n                      \"element\": \"string\",\n                      \"content\": \"\"\n                    }\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": {\n                              \"element\": \"string\",\n                              \"content\": \"GET\"\n                            }\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": {\n                              \"element\": \"string\",\n                              \"content\": \"200\"\n                            },\n                            \"headers\": {\n                              \"element\": \"httpHeaders\",\n                              \"content\": [\n                                {\n                                  \"element\": \"member\",\n                                  \"content\": {\n                                    \"key\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"Content-Type\"\n                                    },\n                                    \"value\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"text/plain\"\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          \"content\": [\n                            {\n                              \"element\": \"asset\",\n                              \"meta\": {\n                                \"classes\": {\n                                  \"element\": \"array\",\n                                  \"content\": [\n                                    {\n                                      \"element\": \"string\",\n                                      \"content\": \"messageBody\"\n                                    }\n                                  ]\n                                }\n                              },\n                              \"attributes\": {\n                                \"contentType\": {\n                                  \"element\": \"string\",\n                                  \"content\": \"text/plain\"\n                                }\n                              },\n                              \"content\": \"Hello World!\\n\"\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint without warning or error into YAML API Elements without version (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Hello API\n    content:\n      - element: category\n        meta:\n          classes:\n            - resourceGroup\n          title: ''\n        content:\n          - element: resource\n            meta:\n              title: ''\n            attributes:\n              href: /message\n            content:\n              - element: transition\n                meta:\n                  title: ''\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method: GET\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode: '200'\n                          headers:\n                            element: httpHeaders\n                            content:\n                              - element: member\n                                content:\n                                  key:\n                                    element: string\n                                    content: Content-Type\n                                  value:\n                                    element: string\n                                    content: text/plain\n                        content:\n                          - element: asset\n                            meta:\n                              classes:\n                                - messageBody\n                            attributes:\n                              contentType: text/plain\n                            content: |\n                              Hello World!\n"
        }

+ Request Transform API Blueprint without warning or error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Hello API\n    content:\n      - element: category\n        meta:\n          classes:\n            - resourceGroup\n          title: ''\n        content:\n          - element: resource\n            meta:\n              title: ''\n            attributes:\n              href: /message\n            content:\n              - element: transition\n                meta:\n                  title: ''\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method: GET\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode: '200'\n                          headers:\n                            element: httpHeaders\n                            content:\n                              - element: member\n                                content:\n                                  key:\n                                    element: string\n                                    content: Content-Type\n                                  value:\n                                    element: string\n                                    content: text/plain\n                        content:\n                          - element: asset\n                            meta:\n                              classes:\n                                - messageBody\n                            attributes:\n                              contentType: text/plain\n                            content: |\n                              Hello World!\n"
        }

+ Request Transform API Blueprint without warning or error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: api\n      title:\n        element: string\n        content: Hello API\n    content:\n      - element: category\n        meta:\n          classes:\n            element: array\n            content:\n              - element: string\n                content: resourceGroup\n          title:\n            element: string\n            content: ''\n        content:\n          - element: resource\n            meta:\n              title:\n                element: string\n                content: ''\n            attributes:\n              href:\n                element: string\n                content: /message\n            content:\n              - element: transition\n                meta:\n                  title:\n                    element: string\n                    content: ''\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method:\n                            element: string\n                            content: GET\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode:\n                            element: string\n                            content: '200'\n                          headers:\n                            element: httpHeaders\n                            content:\n                              - element: member\n                                content:\n                                  key:\n                                    element: string\n                                    content: Content-Type\n                                  value:\n                                    element: string\n                                    content: text/plain\n                        content:\n                          - element: asset\n                            meta:\n                              classes:\n                                element: array\n                                content:\n                                  - element: string\n                                    content: messageBody\n                            attributes:\n                              contentType:\n                                element: string\n                                content: text/plain\n                            content: |\n                              Hello World!\n"
        }

+ Request Transform API Blueprint with a warning into JSON API Elements without version (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Hello\"\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"classes\": [\n              \"resourceGroup\"\n            ],\n            \"title\": \"\"\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"meta\": {\n                \"title\": \"\"\n              },\n              \"attributes\": {\n                \"href\": \"/\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": \"\"\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": \"GET\"\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": \"204\"\n                          },\n                          \"content\": []\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"warning\"\n        ]\n      },\n      \"attributes\": {\n        \"code\": 3,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                18,\n                14\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"no parameters specified, expected a nested list of parameters, one parameter per list item\"\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint with a warning into JSON API Elements 0.6 (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Hello\"\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"classes\": [\n              \"resourceGroup\"\n            ],\n            \"title\": \"\"\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"meta\": {\n                \"title\": \"\"\n              },\n              \"attributes\": {\n                \"href\": \"/\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": \"\"\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": \"GET\"\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": \"204\"\n                          },\n                          \"content\": []\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"warning\"\n        ]\n      },\n      \"attributes\": {\n        \"code\": 3,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                18,\n                14\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"no parameters specified, expected a nested list of parameters, one parameter per list item\"\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint with a warning into JSON API Elements 1.0 (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"api\"\n            }\n          ]\n        },\n        \"title\": {\n          \"element\": \"string\",\n          \"content\": \"Hello\"\n        }\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"classes\": {\n              \"element\": \"array\",\n              \"content\": [\n                {\n                  \"element\": \"string\",\n                  \"content\": \"resourceGroup\"\n                }\n              ]\n            },\n            \"title\": {\n              \"element\": \"string\",\n              \"content\": \"\"\n            }\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"meta\": {\n                \"title\": {\n                  \"element\": \"string\",\n                  \"content\": \"\"\n                }\n              },\n              \"attributes\": {\n                \"href\": {\n                  \"element\": \"string\",\n                  \"content\": \"/\"\n                }\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": {\n                      \"element\": \"string\",\n                      \"content\": \"\"\n                    }\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": {\n                              \"element\": \"string\",\n                              \"content\": \"GET\"\n                            }\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": {\n                              \"element\": \"string\",\n                              \"content\": \"204\"\n                            }\n                          },\n                          \"content\": []\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"warning\"\n            }\n          ]\n        }\n      },\n      \"attributes\": {\n        \"code\": {\n          \"element\": \"number\",\n          \"content\": 3\n        },\n        \"sourceMap\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"sourceMap\",\n              \"content\": [\n                {\n                  \"element\": \"array\",\n                  \"content\": [\n                    {\n                      \"element\": \"number\",\n                      \"content\": 18\n                    },\n                    {\n                      \"element\": \"number\",\n                      \"content\": 14\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"content\": \"no parameters specified, expected a nested list of parameters, one parameter per list item\"\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint with a warning into YAML API Elements without version (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Hello\n    content:\n      - element: category\n        meta:\n          classes:\n            - resourceGroup\n          title: ''\n        content:\n          - element: resource\n            meta:\n              title: ''\n            attributes:\n              href: /\n            content:\n              - element: transition\n                meta:\n                  title: ''\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method: GET\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode: '204'\n                        content: []\n  - element: annotation\n    meta:\n      classes:\n        - warning\n    attributes:\n      code: 3\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 18\n              - 14\n    content: >-\n      no parameters specified, expected a nested list of parameters, one\n      parameter per list item\n"
        }

+ Request Transform API Blueprint with a warning into YAML API Elements 0.6 (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Hello\n    content:\n      - element: category\n        meta:\n          classes:\n            - resourceGroup\n          title: ''\n        content:\n          - element: resource\n            meta:\n              title: ''\n            attributes:\n              href: /\n            content:\n              - element: transition\n                meta:\n                  title: ''\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method: GET\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode: '204'\n                        content: []\n  - element: annotation\n    meta:\n      classes:\n        - warning\n    attributes:\n      code: 3\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 18\n              - 14\n    content: >-\n      no parameters specified, expected a nested list of parameters, one\n      parameter per list item\n"
        }

+ Request Transform API Blueprint with a warning into YAML API Elements 1.0 (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: api\n      title:\n        element: string\n        content: Hello\n    content:\n      - element: category\n        meta:\n          classes:\n            element: array\n            content:\n              - element: string\n                content: resourceGroup\n          title:\n            element: string\n            content: ''\n        content:\n          - element: resource\n            meta:\n              title:\n                element: string\n                content: ''\n            attributes:\n              href:\n                element: string\n                content: /\n            content:\n              - element: transition\n                meta:\n                  title:\n                    element: string\n                    content: ''\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method:\n                            element: string\n                            content: GET\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode:\n                            element: string\n                            content: '204'\n                        content: []\n  - element: annotation\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: warning\n    attributes:\n      code:\n        element: number\n        content: 3\n      sourceMap:\n        element: array\n        content:\n          - element: sourceMap\n            content:\n              - element: array\n                content:\n                  - element: number\n                    content: 18\n                  - element: number\n                    content: 14\n    content: >-\n      no parameters specified, expected a nested list of parameters, one\n      parameter per list item\n"
        }

+ Request Transform API Blueprint with an error into JSON API Elements without version (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ]\n      },\n      \"attributes\": {\n        \"code\": 4,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                39,\n                9\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"base type 'A' circularly referencing itself\"\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint with an error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ]\n      },\n      \"attributes\": {\n        \"code\": 4,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                39,\n                9\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"base type 'A' circularly referencing itself\"\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint with an error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"error\"\n            }\n          ]\n        }\n      },\n      \"attributes\": {\n        \"code\": {\n          \"element\": \"number\",\n          \"content\": 4\n        },\n        \"sourceMap\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"sourceMap\",\n              \"content\": [\n                {\n                  \"element\": \"array\",\n                  \"content\": [\n                    {\n                      \"element\": \"number\",\n                      \"content\": 39\n                    },\n                    {\n                      \"element\": \"number\",\n                      \"content\": 9\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"content\": \"base type 'A' circularly referencing itself\"\n    }\n  ]\n}"
        }

+ Request Transform API Blueprint with an error into YAML API Elements without version (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n    attributes:\n      code: 4\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 39\n              - 9\n    content: base type 'A' circularly referencing itself\n"
        }

+ Request Transform API Blueprint with an error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n    attributes:\n      code: 4\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 39\n              - 9\n    content: base type 'A' circularly referencing itself\n"
        }

+ Request Transform API Blueprint with an error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: error\n    attributes:\n      code:\n        element: number\n        content: 4\n      sourceMap:\n        element: array\n        content:\n          - element: sourceMap\n            content:\n              - element: array\n                content:\n                  - element: number\n                    content: 39\n                  - element: number\n                    content: 9\n    content: base type 'A' circularly referencing itself\n"
        }

+ Request Transform Swagger YAML without warning or error into JSON API Elements without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"attributes\": {\n                        \"statusCode\": \"204\"\n                      },\n                      \"content\": [\n                        {\n                          \"element\": \"copy\",\n                          \"content\": \"Test response\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML without warning or error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"attributes\": {\n                        \"statusCode\": \"204\"\n                      },\n                      \"content\": [\n                        {\n                          \"element\": \"copy\",\n                          \"content\": \"Test response\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML without warning or error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"api\"\n            }\n          ]\n        },\n        \"title\": {\n          \"element\": \"string\",\n          \"content\": \"Swagger\"\n        }\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": {\n              \"element\": \"string\",\n              \"content\": \"/test\"\n            }\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": {\n                  \"element\": \"string\",\n                  \"content\": \"Test get\"\n                }\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": {\n                          \"element\": \"string\",\n                          \"content\": \"GET\"\n                        }\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"attributes\": {\n                        \"statusCode\": {\n                          \"element\": \"string\",\n                          \"content\": \"204\"\n                        }\n                      },\n                      \"content\": [\n                        {\n                          \"element\": \"copy\",\n                          \"content\": \"Test response\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML without warning or error into YAML API Elements without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    attributes:\n                      statusCode: '204'\n                    content:\n                      - element: copy\n                        content: Test response\n"
        }

+ Request Transform Swagger YAML without warning or error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    attributes:\n                      statusCode: '204'\n                    content:\n                      - element: copy\n                        content: Test response\n"
        }

+ Request Transform Swagger YAML without warning or error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: api\n      title:\n        element: string\n        content: Swagger\n    content:\n      - element: resource\n        attributes:\n          href:\n            element: string\n            content: /test\n        content:\n          - element: transition\n            meta:\n              title:\n                element: string\n                content: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method:\n                        element: string\n                        content: GET\n                    content: []\n                  - element: httpResponse\n                    attributes:\n                      statusCode:\n                        element: string\n                        content: '204'\n                    content:\n                      - element: copy\n                        content: Test response\n"
        }

+ Request Transform Swagger YAML with a warning into JSON API Elements without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"content\": []\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"warning\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#refract-not-supported\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 3,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                167,\n                46\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Default response is not yet supported\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML with a warning into JSON API Elements 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"content\": []\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"warning\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#refract-not-supported\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 3,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                167,\n                46\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Default response is not yet supported\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML with a warning into JSON API Elements 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"api\"\n            }\n          ]\n        },\n        \"title\": {\n          \"element\": \"string\",\n          \"content\": \"Swagger\"\n        }\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": {\n              \"element\": \"string\",\n              \"content\": \"/test\"\n            }\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": {\n                  \"element\": \"string\",\n                  \"content\": \"Test get\"\n                }\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": {\n                          \"element\": \"string\",\n                          \"content\": \"GET\"\n                        }\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"content\": []\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"warning\"\n            }\n          ]\n        },\n        \"links\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"link\",\n              \"attributes\": {\n                \"relation\": {\n                  \"element\": \"string\",\n                  \"content\": \"origin\"\n                },\n                \"href\": {\n                  \"element\": \"string\",\n                  \"content\": \"http://docs.apiary.io/validations/swagger#refract-not-supported\"\n                }\n              },\n              \"content\": []\n            }\n          ]\n        }\n      },\n      \"attributes\": {\n        \"code\": {\n          \"element\": \"number\",\n          \"content\": 3\n        },\n        \"sourceMap\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"sourceMap\",\n              \"content\": [\n                {\n                  \"element\": \"array\",\n                  \"content\": [\n                    {\n                      \"element\": \"number\",\n                      \"content\": 167\n                    },\n                    {\n                      \"element\": \"number\",\n                      \"content\": 46\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"content\": \"Default response is not yet supported\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML with a warning into YAML API Elements without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    content: []\n  - element: annotation\n    meta:\n      classes:\n        - warning\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#refract-not-supported'\n          content: []\n    attributes:\n      code: 3\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 167\n              - 46\n    content: Default response is not yet supported\n"
        }

+ Request Transform Swagger YAML with a warning into YAML API Elements 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    content: []\n  - element: annotation\n    meta:\n      classes:\n        - warning\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#refract-not-supported'\n          content: []\n    attributes:\n      code: 3\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 167\n              - 46\n    content: Default response is not yet supported\n"
        }

+ Request Transform Swagger YAML with a warning into YAML API Elements 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: api\n      title:\n        element: string\n        content: Swagger\n    content:\n      - element: resource\n        attributes:\n          href:\n            element: string\n            content: /test\n        content:\n          - element: transition\n            meta:\n              title:\n                element: string\n                content: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method:\n                        element: string\n                        content: GET\n                    content: []\n                  - element: httpResponse\n                    content: []\n  - element: annotation\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: warning\n      links:\n        element: array\n        content:\n          - element: link\n            attributes:\n              relation:\n                element: string\n                content: origin\n              href:\n                element: string\n                content: >-\n                  http://docs.apiary.io/validations/swagger#refract-not-supported\n            content: []\n    attributes:\n      code:\n        element: number\n        content: 3\n      sourceMap:\n        element: array\n        content:\n          - element: sourceMap\n            content:\n              - element: array\n                content:\n                  - element: number\n                    content: 167\n                  - element: number\n                    content: 46\n    content: Default response is not yet supported\n"
        }

+ Request Transform Swagger YAML with an error into JSON API Elements without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#swagger-validation\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 4,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                15,\n                23\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Missing required property: version\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML with an error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#swagger-validation\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 4,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                15,\n                23\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Missing required property: version\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML with an error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"error\"\n            }\n          ]\n        },\n        \"links\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"link\",\n              \"attributes\": {\n                \"relation\": {\n                  \"element\": \"string\",\n                  \"content\": \"origin\"\n                },\n                \"href\": {\n                  \"element\": \"string\",\n                  \"content\": \"http://docs.apiary.io/validations/swagger#swagger-validation\"\n                }\n              },\n              \"content\": []\n            }\n          ]\n        }\n      },\n      \"attributes\": {\n        \"code\": {\n          \"element\": \"number\",\n          \"content\": 4\n        },\n        \"sourceMap\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"sourceMap\",\n              \"content\": [\n                {\n                  \"element\": \"array\",\n                  \"content\": [\n                    {\n                      \"element\": \"number\",\n                      \"content\": 15\n                    },\n                    {\n                      \"element\": \"number\",\n                      \"content\": 23\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"content\": \"Missing required property: version\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger YAML with an error into YAML API Elements without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#swagger-validation'\n          content: []\n    attributes:\n      code: 4\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 15\n              - 23\n    content: 'Missing required property: version'\n"
        }

+ Request Transform Swagger YAML with an error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#swagger-validation'\n          content: []\n    attributes:\n      code: 4\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 15\n              - 23\n    content: 'Missing required property: version'\n"
        }

+ Request Transform Swagger YAML with an error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: error\n      links:\n        element: array\n        content:\n          - element: link\n            attributes:\n              relation:\n                element: string\n                content: origin\n              href:\n                element: string\n                content: 'http://docs.apiary.io/validations/swagger#swagger-validation'\n            content: []\n    attributes:\n      code:\n        element: number\n        content: 4\n      sourceMap:\n        element: array\n        content:\n          - element: sourceMap\n            content:\n              - element: array\n                content:\n                  - element: number\n                    content: 15\n                  - element: number\n                    content: 23\n    content: 'Missing required property: version'\n"
        }

+ Request Transform Swagger JSON without warning or error into JSON API Elements without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"attributes\": {\n                        \"statusCode\": \"204\"\n                      },\n                      \"content\": [\n                        {\n                          \"element\": \"copy\",\n                          \"content\": \"Test response\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON without warning or error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"attributes\": {\n                        \"statusCode\": \"204\"\n                      },\n                      \"content\": [\n                        {\n                          \"element\": \"copy\",\n                          \"content\": \"Test response\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON without warning or error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"api\"\n            }\n          ]\n        },\n        \"title\": {\n          \"element\": \"string\",\n          \"content\": \"Swagger\"\n        }\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": {\n              \"element\": \"string\",\n              \"content\": \"/test\"\n            }\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": {\n                  \"element\": \"string\",\n                  \"content\": \"Test get\"\n                }\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": {\n                          \"element\": \"string\",\n                          \"content\": \"GET\"\n                        }\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"attributes\": {\n                        \"statusCode\": {\n                          \"element\": \"string\",\n                          \"content\": \"204\"\n                        }\n                      },\n                      \"content\": [\n                        {\n                          \"element\": \"copy\",\n                          \"content\": \"Test response\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON without warning or error into YAML API Elements without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    attributes:\n                      statusCode: '204'\n                    content:\n                      - element: copy\n                        content: Test response\n"
        }

+ Request Transform Swagger JSON without warning or error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    attributes:\n                      statusCode: '204'\n                    content:\n                      - element: copy\n                        content: Test response\n"
        }

+ Request Transform Swagger JSON without warning or error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: api\n      title:\n        element: string\n        content: Swagger\n    content:\n      - element: resource\n        attributes:\n          href:\n            element: string\n            content: /test\n        content:\n          - element: transition\n            meta:\n              title:\n                element: string\n                content: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method:\n                        element: string\n                        content: GET\n                    content: []\n                  - element: httpResponse\n                    attributes:\n                      statusCode:\n                        element: string\n                        content: '204'\n                    content:\n                      - element: copy\n                        content: Test response\n"
        }

+ Request Transform Swagger JSON with a warning into JSON API Elements without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"content\": []\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"warning\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#refract-not-supported\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 3,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                234,\n                67\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Default response is not yet supported\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON with a warning into JSON API Elements 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Swagger\"\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": \"/test\"\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": \"Test get\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": \"GET\"\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"content\": []\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"warning\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#refract-not-supported\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 3,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                234,\n                67\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Default response is not yet supported\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON with a warning into JSON API Elements 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"api\"\n            }\n          ]\n        },\n        \"title\": {\n          \"element\": \"string\",\n          \"content\": \"Swagger\"\n        }\n      },\n      \"content\": [\n        {\n          \"element\": \"resource\",\n          \"attributes\": {\n            \"href\": {\n              \"element\": \"string\",\n              \"content\": \"/test\"\n            }\n          },\n          \"content\": [\n            {\n              \"element\": \"transition\",\n              \"meta\": {\n                \"title\": {\n                  \"element\": \"string\",\n                  \"content\": \"Test get\"\n                }\n              },\n              \"content\": [\n                {\n                  \"element\": \"copy\",\n                  \"content\": \"Test description\"\n                },\n                {\n                  \"element\": \"httpTransaction\",\n                  \"content\": [\n                    {\n                      \"element\": \"httpRequest\",\n                      \"attributes\": {\n                        \"method\": {\n                          \"element\": \"string\",\n                          \"content\": \"GET\"\n                        }\n                      },\n                      \"content\": []\n                    },\n                    {\n                      \"element\": \"httpResponse\",\n                      \"content\": []\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"warning\"\n            }\n          ]\n        },\n        \"links\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"link\",\n              \"attributes\": {\n                \"relation\": {\n                  \"element\": \"string\",\n                  \"content\": \"origin\"\n                },\n                \"href\": {\n                  \"element\": \"string\",\n                  \"content\": \"http://docs.apiary.io/validations/swagger#refract-not-supported\"\n                }\n              },\n              \"content\": []\n            }\n          ]\n        }\n      },\n      \"attributes\": {\n        \"code\": {\n          \"element\": \"number\",\n          \"content\": 3\n        },\n        \"sourceMap\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"sourceMap\",\n              \"content\": [\n                {\n                  \"element\": \"array\",\n                  \"content\": [\n                    {\n                      \"element\": \"number\",\n                      \"content\": 234\n                    },\n                    {\n                      \"element\": \"number\",\n                      \"content\": 67\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"content\": \"Default response is not yet supported\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON with a warning into YAML API Elements without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    content: []\n  - element: annotation\n    meta:\n      classes:\n        - warning\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#refract-not-supported'\n          content: []\n    attributes:\n      code: 3\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 234\n              - 67\n    content: Default response is not yet supported\n"
        }

+ Request Transform Swagger JSON with a warning into YAML API Elements 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Swagger\n    content:\n      - element: resource\n        attributes:\n          href: /test\n        content:\n          - element: transition\n            meta:\n              title: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method: GET\n                    content: []\n                  - element: httpResponse\n                    content: []\n  - element: annotation\n    meta:\n      classes:\n        - warning\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#refract-not-supported'\n          content: []\n    attributes:\n      code: 3\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 234\n              - 67\n    content: Default response is not yet supported\n"
        }

+ Request Transform Swagger JSON with a warning into YAML API Elements 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: api\n      title:\n        element: string\n        content: Swagger\n    content:\n      - element: resource\n        attributes:\n          href:\n            element: string\n            content: /test\n        content:\n          - element: transition\n            meta:\n              title:\n                element: string\n                content: Test get\n            content:\n              - element: copy\n                content: Test description\n              - element: httpTransaction\n                content:\n                  - element: httpRequest\n                    attributes:\n                      method:\n                        element: string\n                        content: GET\n                    content: []\n                  - element: httpResponse\n                    content: []\n  - element: annotation\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: warning\n      links:\n        element: array\n        content:\n          - element: link\n            attributes:\n              relation:\n                element: string\n                content: origin\n              href:\n                element: string\n                content: >-\n                  http://docs.apiary.io/validations/swagger#refract-not-supported\n            content: []\n    attributes:\n      code:\n        element: number\n        content: 3\n      sourceMap:\n        element: array\n        content:\n          - element: sourceMap\n            content:\n              - element: array\n                content:\n                  - element: number\n                    content: 234\n                  - element: number\n                    content: 67\n    content: Default response is not yet supported\n"
        }

+ Request Transform Swagger JSON with an error into JSON API Elements without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#swagger-validation\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 4,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                24,\n                37\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Missing required property: version\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON with an error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ],\n        \"links\": [\n          {\n            \"element\": \"link\",\n            \"attributes\": {\n              \"relation\": \"origin\",\n              \"href\": \"http://docs.apiary.io/validations/swagger#swagger-validation\"\n            },\n            \"content\": []\n          }\n        ]\n      },\n      \"attributes\": {\n        \"code\": 4,\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                24,\n                37\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Missing required property: version\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON with an error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"error\"\n            }\n          ]\n        },\n        \"links\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"link\",\n              \"attributes\": {\n                \"relation\": {\n                  \"element\": \"string\",\n                  \"content\": \"origin\"\n                },\n                \"href\": {\n                  \"element\": \"string\",\n                  \"content\": \"http://docs.apiary.io/validations/swagger#swagger-validation\"\n                }\n              },\n              \"content\": []\n            }\n          ]\n        }\n      },\n      \"attributes\": {\n        \"code\": {\n          \"element\": \"number\",\n          \"content\": 4\n        },\n        \"sourceMap\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"sourceMap\",\n              \"content\": [\n                {\n                  \"element\": \"array\",\n                  \"content\": [\n                    {\n                      \"element\": \"number\",\n                      \"content\": 24\n                    },\n                    {\n                      \"element\": \"number\",\n                      \"content\": 37\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"content\": \"Missing required property: version\"\n    }\n  ]\n}"
        }

+ Request Transform Swagger JSON with an error into YAML API Elements without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#swagger-validation'\n          content: []\n    attributes:\n      code: 4\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 24\n              - 37\n    content: 'Missing required property: version'\n"
        }

+ Request Transform Swagger JSON with an error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n      links:\n        - element: link\n          attributes:\n            relation: origin\n            href: 'http://docs.apiary.io/validations/swagger#swagger-validation'\n          content: []\n    attributes:\n      code: 4\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 24\n              - 37\n    content: 'Missing required property: version'\n"
        }

+ Request Transform Swagger JSON with an error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: error\n      links:\n        element: array\n        content:\n          - element: link\n            attributes:\n              relation:\n                element: string\n                content: origin\n              href:\n                element: string\n                content: 'http://docs.apiary.io/validations/swagger#swagger-validation'\n            content: []\n    attributes:\n      code:\n        element: number\n        content: 4\n      sourceMap:\n        element: array\n        content:\n          - element: sourceMap\n            content:\n              - element: array\n                content:\n                  - element: number\n                    content: 24\n                  - element: number\n                    content: 37\n    content: 'Missing required property: version'\n"
        }

+ Request Transform Apiary Blueprint without warning or error into JSON API Elements without version (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Sample API\"\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"title\": null,\n            \"classes\": [\n              \"resourceGroup\"\n            ]\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"attributes\": {\n                \"href\": \"/message\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": \"GET\"\n                  },\n                  \"attributes\": {\n                    \"href\": \"/message\"\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": \"GET\",\n                            \"headers\": null\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": 200,\n                            \"headers\": {\n                              \"element\": \"httpHeaders\",\n                              \"content\": [\n                                {\n                                  \"element\": \"member\",\n                                  \"content\": {\n                                    \"key\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"Content-Type\"\n                                    },\n                                    \"value\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"text/plain\"\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          \"content\": [\n                            {\n                              \"element\": \"asset\",\n                              \"meta\": {\n                                \"classes\": [\n                                  \"messageBody\"\n                                ]\n                              },\n                              \"content\": \"Hello World!\"\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Apiary Blueprint without warning or error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": [\n          \"api\"\n        ],\n        \"title\": \"Sample API\"\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"title\": null,\n            \"classes\": [\n              \"resourceGroup\"\n            ]\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"attributes\": {\n                \"href\": \"/message\"\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": \"GET\"\n                  },\n                  \"attributes\": {\n                    \"href\": \"/message\"\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": \"GET\",\n                            \"headers\": null\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": 200,\n                            \"headers\": {\n                              \"element\": \"httpHeaders\",\n                              \"content\": [\n                                {\n                                  \"element\": \"member\",\n                                  \"content\": {\n                                    \"key\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"Content-Type\"\n                                    },\n                                    \"value\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"text/plain\"\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          \"content\": [\n                            {\n                              \"element\": \"asset\",\n                              \"meta\": {\n                                \"classes\": [\n                                  \"messageBody\"\n                                ]\n                              },\n                              \"content\": \"Hello World!\"\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Apiary Blueprint without warning or error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"category\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"api\"\n            }\n          ]\n        },\n        \"title\": {\n          \"element\": \"string\",\n          \"content\": \"Sample API\"\n        }\n      },\n      \"content\": [\n        {\n          \"element\": \"category\",\n          \"meta\": {\n            \"title\": {\n              \"element\": \"null\",\n              \"content\": null\n            },\n            \"classes\": {\n              \"element\": \"array\",\n              \"content\": [\n                {\n                  \"element\": \"string\",\n                  \"content\": \"resourceGroup\"\n                }\n              ]\n            }\n          },\n          \"content\": [\n            {\n              \"element\": \"resource\",\n              \"attributes\": {\n                \"href\": {\n                  \"element\": \"string\",\n                  \"content\": \"/message\"\n                }\n              },\n              \"content\": [\n                {\n                  \"element\": \"transition\",\n                  \"meta\": {\n                    \"title\": {\n                      \"element\": \"string\",\n                      \"content\": \"GET\"\n                    }\n                  },\n                  \"attributes\": {\n                    \"href\": {\n                      \"element\": \"string\",\n                      \"content\": \"/message\"\n                    }\n                  },\n                  \"content\": [\n                    {\n                      \"element\": \"httpTransaction\",\n                      \"content\": [\n                        {\n                          \"element\": \"httpRequest\",\n                          \"attributes\": {\n                            \"method\": {\n                              \"element\": \"string\",\n                              \"content\": \"GET\"\n                            },\n                            \"headers\": {\n                              \"element\": \"null\",\n                              \"content\": null\n                            }\n                          },\n                          \"content\": []\n                        },\n                        {\n                          \"element\": \"httpResponse\",\n                          \"attributes\": {\n                            \"statusCode\": {\n                              \"element\": \"number\",\n                              \"content\": 200\n                            },\n                            \"headers\": {\n                              \"element\": \"httpHeaders\",\n                              \"content\": [\n                                {\n                                  \"element\": \"member\",\n                                  \"content\": {\n                                    \"key\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"Content-Type\"\n                                    },\n                                    \"value\": {\n                                      \"element\": \"string\",\n                                      \"content\": \"text/plain\"\n                                    }\n                                  }\n                                }\n                              ]\n                            }\n                          },\n                          \"content\": [\n                            {\n                              \"element\": \"asset\",\n                              \"meta\": {\n                                \"classes\": {\n                                  \"element\": \"array\",\n                                  \"content\": [\n                                    {\n                                      \"element\": \"string\",\n                                      \"content\": \"messageBody\"\n                                    }\n                                  ]\n                                }\n                              },\n                              \"content\": \"Hello World!\"\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
        }

+ Request Transform Apiary Blueprint without warning or error into YAML API Elements without version (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Sample API\n    content:\n      - element: category\n        meta:\n          title: null\n          classes:\n            - resourceGroup\n        content:\n          - element: resource\n            attributes:\n              href: /message\n            content:\n              - element: transition\n                meta:\n                  title: GET\n                attributes:\n                  href: /message\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method: GET\n                          headers: null\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode: 200\n                          headers:\n                            element: httpHeaders\n                            content:\n                              - element: member\n                                content:\n                                  key:\n                                    element: string\n                                    content: Content-Type\n                                  value:\n                                    element: string\n                                    content: text/plain\n                        content:\n                          - element: asset\n                            meta:\n                              classes:\n                                - messageBody\n                            content: Hello World!\n"
        }

+ Request Transform Apiary Blueprint without warning or error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        - api\n      title: Sample API\n    content:\n      - element: category\n        meta:\n          title: null\n          classes:\n            - resourceGroup\n        content:\n          - element: resource\n            attributes:\n              href: /message\n            content:\n              - element: transition\n                meta:\n                  title: GET\n                attributes:\n                  href: /message\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method: GET\n                          headers: null\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode: 200\n                          headers:\n                            element: httpHeaders\n                            content:\n                              - element: member\n                                content:\n                                  key:\n                                    element: string\n                                    content: Content-Type\n                                  value:\n                                    element: string\n                                    content: text/plain\n                        content:\n                          - element: asset\n                            meta:\n                              classes:\n                                - messageBody\n                            content: Hello World!\n"
        }

+ Request Transform Apiary Blueprint without warning or error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 200 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: category\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: api\n      title:\n        element: string\n        content: Sample API\n    content:\n      - element: category\n        meta:\n          title:\n            element: 'null'\n            content: null\n          classes:\n            element: array\n            content:\n              - element: string\n                content: resourceGroup\n        content:\n          - element: resource\n            attributes:\n              href:\n                element: string\n                content: /message\n            content:\n              - element: transition\n                meta:\n                  title:\n                    element: string\n                    content: GET\n                attributes:\n                  href:\n                    element: string\n                    content: /message\n                content:\n                  - element: httpTransaction\n                    content:\n                      - element: httpRequest\n                        attributes:\n                          method:\n                            element: string\n                            content: GET\n                          headers:\n                            element: 'null'\n                            content: null\n                        content: []\n                      - element: httpResponse\n                        attributes:\n                          statusCode:\n                            element: number\n                            content: 200\n                          headers:\n                            element: httpHeaders\n                            content:\n                              - element: member\n                                content:\n                                  key:\n                                    element: string\n                                    content: Content-Type\n                                  value:\n                                    element: string\n                                    content: text/plain\n                        content:\n                          - element: asset\n                            meta:\n                              classes:\n                                element: array\n                                content:\n                                  - element: string\n                                    content: messageBody\n                            content: Hello World!\n"
        }

+ Request Transform Apiary Blueprint with an error into JSON API Elements without version (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ]\n      },\n      \"attributes\": {\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                31,\n                1\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Expected \\\"COPY\\\", \\\"DELETE\\\", \\\"GET\\\", \\\"HEAD\\\", \\\"LOCK\\\", \\\"MKCOL\\\", \\\"MOVE\\\", \\\"OPTIONS\\\", \\\"PATCH\\\", \\\"POST\\\", \\\"PROPPATCH\\\", \\\"PUT\\\" or \\\"UNLOCK\\\" but end of input found.\"\n    }\n  ]\n}"
        }

+ Request Transform Apiary Blueprint with an error into JSON API Elements 0.6 (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=0.6",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": [\n          \"error\"\n        ]\n      },\n      \"attributes\": {\n        \"sourceMap\": [\n          {\n            \"element\": \"sourceMap\",\n            \"content\": [\n              [\n                31,\n                1\n              ]\n            ]\n          }\n        ]\n      },\n      \"content\": \"Expected \\\"COPY\\\", \\\"DELETE\\\", \\\"GET\\\", \\\"HEAD\\\", \\\"LOCK\\\", \\\"MKCOL\\\", \\\"MOVE\\\", \\\"OPTIONS\\\", \\\"PATCH\\\", \\\"POST\\\", \\\"PROPPATCH\\\", \\\"PUT\\\" or \\\"UNLOCK\\\" but end of input found.\"\n    }\n  ]\n}"
        }

+ Request Transform Apiary Blueprint with an error into JSON API Elements 1.0 (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+json; version=1.0",
          "output_document": "{\n  \"element\": \"parseResult\",\n  \"content\": [\n    {\n      \"element\": \"annotation\",\n      \"meta\": {\n        \"classes\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"string\",\n              \"content\": \"error\"\n            }\n          ]\n        }\n      },\n      \"attributes\": {\n        \"sourceMap\": {\n          \"element\": \"array\",\n          \"content\": [\n            {\n              \"element\": \"sourceMap\",\n              \"content\": [\n                {\n                  \"element\": \"array\",\n                  \"content\": [\n                    {\n                      \"element\": \"number\",\n                      \"content\": 31\n                    },\n                    {\n                      \"element\": \"number\",\n                      \"content\": 1\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"content\": \"Expected \\\"COPY\\\", \\\"DELETE\\\", \\\"GET\\\", \\\"HEAD\\\", \\\"LOCK\\\", \\\"MKCOL\\\", \\\"MOVE\\\", \\\"OPTIONS\\\", \\\"PATCH\\\", \\\"POST\\\", \\\"PROPPATCH\\\", \\\"PUT\\\" or \\\"UNLOCK\\\" but end of input found.\"\n    }\n  ]\n}"
        }

+ Request Transform Apiary Blueprint with an error into YAML API Elements without version (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n    attributes:\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 31\n              - 1\n    content: >-\n      Expected \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"MKCOL\", \"MOVE\",\n      \"OPTIONS\", \"PATCH\", \"POST\", \"PROPPATCH\", \"PUT\" or \"UNLOCK\" but end of\n      input found.\n"
        }

+ Request Transform Apiary Blueprint with an error into YAML API Elements 0.6 (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=0.6",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        - error\n    attributes:\n      sourceMap:\n        - element: sourceMap\n          content:\n            - - 31\n              - 1\n    content: >-\n      Expected \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"MKCOL\", \"MOVE\",\n      \"OPTIONS\", \"PATCH\", \"POST\", \"PROPPATCH\", \"PUT\" or \"UNLOCK\" but end of\n      input found.\n"
        }

+ Request Transform Apiary Blueprint with an error into YAML API Elements 1.0 (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0"
        }

+ Response 422 (application/hal+json)

        {
          "output_type": "application/vnd.refract.parse-result+yaml; version=1.0",
          "output_document": "element: parseResult\ncontent:\n  - element: annotation\n    meta:\n      classes:\n        element: array\n        content:\n          - element: string\n            content: error\n    attributes:\n      sourceMap:\n        element: array\n        content:\n          - element: sourceMap\n            content:\n              - element: array\n                content:\n                  - element: number\n                    content: 31\n                  - element: number\n                    content: 1\n    content: >-\n      Expected \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"MKCOL\", \"MOVE\",\n      \"OPTIONS\", \"PATCH\", \"POST\", \"PROPPATCH\", \"PUT\" or \"UNLOCK\" but end of\n      input found.\n"
        }

+ Request No Input Document (application/json)

        {
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 400 (application/vnd.error+json)

        {
          "statusCode": 400,
          "message": "",
          "name": "Rest Error"
        }

+ Request Unsupported Input Media Type (application/json)

        {
          "input_document": "#Test API\n##Test [/test]\n",
          "output_type": "application/vnd.apiblueprint.parseresult+json; version=2.2"
        }

+ Response 415 (application/vnd.error+json)

        {
          "statusCode": 415,
          "message": "",
          "name": "Rest Error"
        }

+ Request Unsupported Output Media Type (application/json)

        {
          "input_type": "application/swagger+yaml",
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\n",
          "output_type": "application/vnd.apiblueprint.parseresult+json; version=2.2"
        }

+ Response 406 (application/vnd.error+json)

        {
          "statusCode": 406,
          "message": "",
          "name": "Rest Error"
        }

## API Description Parser [/parser]
Parse an API description format.

### Parse [POST]
API Blueprint parsing is performed as it is provided by the [Drafter](https://github.com/apiaryio/drafter) reference parser.

#### Input Media Types

##### API Blueprint

```
text/vnd.apiblueprint
```

API Blueprint as defined in its [specification](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md).

##### Swagger 2.0

```
application/swagger+yaml
application/swagger+json
```

Swagger as defined in its [specification](http://swagger.io/specification)

#### Output Media Types

##### API Description Parse Result Namespace

```
application/vnd.refract.parse-result+json
application/vnd.refract.parse-result+yaml
```

General-purpose result of the parsing operation. The parse result is in form of the Refract data structure as defined in its [specification](https://github.com/refractproject/refract-spec). The parse result data comply with the [Parse Result Namespace](https://github.com/refractproject/refract-spec/blob/master/namespaces/parse-result-namespace.md).

+ Relation: parse

+ Request Parse API Blueprint into Parse Result Namespace as JSON (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+json

    + Body

            # Hello API
            ## /message
            ### GET
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "api"
                ],
                "title": "Hello API"
              },
              "content": [
                {
                  "element": "category",
                  "meta": {
                    "classes": [
                      "resourceGroup"
                    ],
                    "title": ""
                  },
                  "content": [
                    {
                      "element": "resource",
                      "meta": {
                        "title": ""
                      },
                      "attributes": {
                        "href": "/message"
                      },
                      "content": [
                        {
                          "element": "transition",
                          "meta": {
                            "title": ""
                          },
                          "content": [
                            {
                              "element": "httpTransaction",
                              "content": [
                                {
                                  "element": "httpRequest",
                                  "attributes": {
                                    "method": "GET"
                                  },
                                  "content": []
                                },
                                {
                                  "element": "httpResponse",
                                  "attributes": {
                                    "statusCode": "200",
                                    "headers": {
                                      "element": "httpHeaders",
                                      "content": [
                                        {
                                          "element": "member",
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "Content-Type"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "text/plain"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "asset",
                                      "meta": {
                                        "classes": [
                                          "messageBody"
                                        ]
                                      },
                                      "attributes": {
                                        "contentType": "text/plain"
                                      },
                                      "content": "Hello World!\n"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }

+ Request Parse API Blueprint into Parse Result Namespace as YAML (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+yaml

    + Body

            # Hello API
            ## /message
            ### GET
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract.parse-result+yaml)

        element: parseResult
        content:
          - element: category
            meta:
              classes:
                - api
              title: Hello API
            content:
              - element: category
                meta:
                  classes:
                    - resourceGroup
                  title: ''
                content:
                  - element: resource
                    meta:
                      title: ''
                    attributes:
                      href: /message
                    content:
                      - element: transition
                        meta:
                          title: ''
                        content:
                          - element: httpTransaction
                            content:
                              - element: httpRequest
                                attributes:
                                  method: GET
                                content: []
                              - element: httpResponse
                                attributes:
                                  statusCode: '200'
                                  headers:
                                    element: httpHeaders
                                    content:
                                      - element: member
                                        content:
                                          key:
                                            element: string
                                            content: Content-Type
                                          value:
                                            element: string
                                            content: text/plain
                                content:
                                  - element: asset
                                    meta:
                                      classes:
                                        - messageBody
                                    attributes:
                                      contentType: text/plain
                                    content: |
                                      Hello World!


+ Request Parse API Blueprint into Parse Result Namespace as JSON 1.0 (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+json; version=1.0

    + Body

            # Hello API
            ## /message
            ### GET
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract.parse-result+json; version=1.0)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "api"
                    }
                  ]
                },
                "title": {
                  "element": "string",
                  "content": "Hello API"
                }
              },
              "content": [
                {
                  "element": "category",
                  "meta": {
                    "classes": {
                      "element": "array",
                      "content": [
                        {
                          "element": "string",
                          "content": "resourceGroup"
                        }
                      ]
                    },
                    "title": {
                      "element": "string",
                      "content": ""
                    }
                  },
                  "content": [
                    {
                      "element": "resource",
                      "meta": {
                        "title": {
                          "element": "string",
                          "content": ""
                        }
                      },
                      "attributes": {
                        "href": {
                          "element": "string",
                          "content": "/message"
                        }
                      },
                      "content": [
                        {
                          "element": "transition",
                          "meta": {
                            "title": {
                              "element": "string",
                              "content": ""
                            }
                          },
                          "content": [
                            {
                              "element": "httpTransaction",
                              "content": [
                                {
                                  "element": "httpRequest",
                                  "attributes": {
                                    "method": {
                                      "element": "string",
                                      "content": "GET"
                                    }
                                  },
                                  "content": []
                                },
                                {
                                  "element": "httpResponse",
                                  "attributes": {
                                    "statusCode": {
                                      "element": "string",
                                      "content": "200"
                                    },
                                    "headers": {
                                      "element": "httpHeaders",
                                      "content": [
                                        {
                                          "element": "member",
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "Content-Type"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "text/plain"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "asset",
                                      "meta": {
                                        "classes": {
                                          "element": "array",
                                          "content": [
                                            {
                                              "element": "string",
                                              "content": "messageBody"
                                            }
                                          ]
                                        }
                                      },
                                      "attributes": {
                                        "contentType": {
                                          "element": "string",
                                          "content": "text/plain"
                                        }
                                      },
                                      "content": "Hello World!\n"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }

+ Request Parse API Blueprint into Parse Result Namespace as YAML 1.0 (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+yaml; version=1.0

    + Body

            # Hello API
            ## /message
            ### GET
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract.parse-result+yaml; version=1.0)

        element: parseResult
        content:
          - element: category
            meta:
              classes:
                element: array
                content:
                  - element: string
                    content: api
              title:
                element: string
                content: Hello API
            content:
              - element: category
                meta:
                  classes:
                    element: array
                    content:
                      - element: string
                        content: resourceGroup
                  title:
                    element: string
                    content: ''
                content:
                  - element: resource
                    meta:
                      title:
                        element: string
                        content: ''
                    attributes:
                      href:
                        element: string
                        content: /message
                    content:
                      - element: transition
                        meta:
                          title:
                            element: string
                            content: ''
                        content:
                          - element: httpTransaction
                            content:
                              - element: httpRequest
                                attributes:
                                  method:
                                    element: string
                                    content: GET
                                content: []
                              - element: httpResponse
                                attributes:
                                  statusCode:
                                    element: string
                                    content: '200'
                                  headers:
                                    element: httpHeaders
                                    content:
                                      - element: member
                                        content:
                                          key:
                                            element: string
                                            content: Content-Type
                                          value:
                                            element: string
                                            content: text/plain
                                content:
                                  - element: asset
                                    meta:
                                      classes:
                                        element: array
                                        content:
                                          - element: string
                                            content: messageBody
                                    attributes:
                                      contentType:
                                        element: string
                                        content: text/plain
                                    content: |
                                      Hello World!


+ Request Parse API Blueprint into Parse Result Namespace as JSON 0.6 (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+json; version=0.6

    + Body

            # Hello API
            ## /message
            ### GET
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract.parse-result+json; version=0.6)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "api"
                ],
                "title": "Hello API"
              },
              "content": [
                {
                  "element": "category",
                  "meta": {
                    "classes": [
                      "resourceGroup"
                    ],
                    "title": ""
                  },
                  "content": [
                    {
                      "element": "resource",
                      "meta": {
                        "title": ""
                      },
                      "attributes": {
                        "href": "/message"
                      },
                      "content": [
                        {
                          "element": "transition",
                          "meta": {
                            "title": ""
                          },
                          "content": [
                            {
                              "element": "httpTransaction",
                              "content": [
                                {
                                  "element": "httpRequest",
                                  "attributes": {
                                    "method": "GET"
                                  },
                                  "content": []
                                },
                                {
                                  "element": "httpResponse",
                                  "attributes": {
                                    "statusCode": "200",
                                    "headers": {
                                      "element": "httpHeaders",
                                      "content": [
                                        {
                                          "element": "member",
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "Content-Type"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "text/plain"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "asset",
                                      "meta": {
                                        "classes": [
                                          "messageBody"
                                        ]
                                      },
                                      "attributes": {
                                        "contentType": "text/plain"
                                      },
                                      "content": "Hello World!\n"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }

+ Request Parse API Blueprint into Parse Result Namespace as YAML 0.6 (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+yaml; version=0.6

    + Body

            # Hello API
            ## /message
            ### GET
            + Response 200 (text/plain)

                    Hello World!

+ Response 200 (application/vnd.refract.parse-result+yaml; version=0.6)

        element: parseResult
        content:
          - element: category
            meta:
              classes:
                - api
              title: Hello API
            content:
              - element: category
                meta:
                  classes:
                    - resourceGroup
                  title: ''
                content:
                  - element: resource
                    meta:
                      title: ''
                    attributes:
                      href: /message
                    content:
                      - element: transition
                        meta:
                          title: ''
                        content:
                          - element: httpTransaction
                            content:
                              - element: httpRequest
                                attributes:
                                  method: GET
                                content: []
                              - element: httpResponse
                                attributes:
                                  statusCode: '200'
                                  headers:
                                    element: httpHeaders
                                    content:
                                      - element: member
                                        content:
                                          key:
                                            element: string
                                            content: Content-Type
                                          value:
                                            element: string
                                            content: text/plain
                                content:
                                  - element: asset
                                    meta:
                                      classes:
                                        - messageBody
                                    attributes:
                                      contentType: text/plain
                                    content: |
                                      Hello World!


+ Request Invalid Document (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+yaml

    + Body

            FORMAT: 1A

            # Hello

            # Data Structures
            ## A (A)

+ Response 422 (application/vnd.refract.parse-result+yaml)

        element: parseResult
        content:
          - element: annotation
            meta:
              classes:
                - error
            attributes:
              code: 4
              sourceMap:
                - element: sourceMap
                  content:
                    - - 39
                      - 9
            content: base type 'A' circularly referencing itself



+ Request Unsupported Input Media Type

    + Headers

            Accept: application/raml+yaml

    + Body

            # Hello API
            ## /message
            ### GET
            + Response 200 (text/plain)

                    Hello World!

+ Response 415 (application/vnd.error+json)

        {
          "statusCode": 415,
          "message": "",
          "name": "Rest Error"
        }

+ Request Unsupported Output Media Type (application/swagger+yaml)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+json; version=2.2

    + Body

            swagger: '2.0'
            info:
              title: Swagger
              version: '2.0'
            paths:
              '/test':
                get:
                  summary: Test get
                  description: Test description
                  responses:
                    204:
                      description: Test response

+ Response 406 (application/vnd.error+json)

        {
          "statusCode": 406,
          "message": "",
          "name": "Rest Error"
        }

## API Description Composer [/composer]
Reverse the parsing process--compose an API description format.

### Compose [POST]

#### Input Media Types

##### API Elements

API Elements is supported, you can send an [API Elements API
Category](http://api-elements.readthedocs.io/en/latest/element-definitions/#category-base-api-element)
to the composer using the `application/vnd.refract+json` content type. You may
also send an [API Elements Parse
Result](http://api-elements.readthedocs.io/en/latest/element-definitions/#parse-result-elements)
as `application/vnd.refract.parse-result+json`.

```
application/vnd.refract+json
application/vnd.refract.parse-result+json
```

#### Output Media Types

##### API Blueprint

```
text/vnd.apiblueprint
```

API Blueprint as defined in its [specification](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md).

+ Relation: compose

+ Request Compose API Blueprint from API Elements API (application/vnd.refract+json)

        {
          "element": "category",
          "meta": {
            "classes": [
              "api"
            ],
            "title": "Hello API"
          },
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "resourceGroup"
                ],
                "title": ""
              },
              "content": [
                {
                  "element": "resource",
                  "meta": {
                    "title": ""
                  },
                  "attributes": {
                    "href": "/message"
                  },
                  "content": [
                    {
                      "element": "transition",
                      "meta": {
                        "title": ""
                      },
                      "content": [
                        {
                          "element": "httpTransaction",
                          "content": [
                            {
                              "element": "httpRequest",
                              "attributes": {
                                "method": "GET"
                              },
                              "content": []
                            },
                            {
                              "element": "httpResponse",
                              "attributes": {
                                "statusCode": "200",
                                "headers": {
                                  "element": "httpHeaders",
                                  "content": [
                                    {
                                      "element": "member",
                                      "content": {
                                        "key": {
                                          "element": "string",
                                          "content": "Content-Type"
                                        },
                                        "value": {
                                          "element": "string",
                                          "content": "text/plain"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "content": [
                                {
                                  "element": "asset",
                                  "meta": {
                                    "classes": [
                                      "messageBody"
                                    ]
                                  },
                                  "attributes": {
                                    "contentType": "text/plain"
                                  },
                                  "content": "Hello World!\n"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }

+ Response 200 (text/vnd.apiblueprint)

        FORMAT: 1A

        # Hello API

        ## Group 

        ### /message

        #### GET

        + Response 200 (text/plain)

                Hello World!


+ Request Compose API Blueprint from API Elements Parse Result (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "api"
                ],
                "title": "Hello API"
              },
              "content": [
                {
                  "element": "category",
                  "meta": {
                    "classes": [
                      "resourceGroup"
                    ],
                    "title": ""
                  },
                  "content": [
                    {
                      "element": "resource",
                      "meta": {
                        "title": ""
                      },
                      "attributes": {
                        "href": "/message"
                      },
                      "content": [
                        {
                          "element": "transition",
                          "meta": {
                            "title": ""
                          },
                          "content": [
                            {
                              "element": "httpTransaction",
                              "content": [
                                {
                                  "element": "httpRequest",
                                  "attributes": {
                                    "method": "GET"
                                  },
                                  "content": []
                                },
                                {
                                  "element": "httpResponse",
                                  "attributes": {
                                    "statusCode": "200",
                                    "headers": {
                                      "element": "httpHeaders",
                                      "content": [
                                        {
                                          "element": "member",
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "Content-Type"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "text/plain"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "asset",
                                      "meta": {
                                        "classes": [
                                          "messageBody"
                                        ]
                                      },
                                      "attributes": {
                                        "contentType": "text/plain"
                                      },
                                      "content": "Hello World!\n"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }

+ Response 200 (text/vnd.apiblueprint)

        FORMAT: 1A

        # Hello API

        ## Group 

        ### /message

        #### GET

        + Response 200 (text/plain)

                Hello World!


+ Request Compose API Blueprint from API Elements 1.0 Parse Result (application/vnd.refract.parse-result+json; version=1.0)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "api"
                    }
                  ]
                },
                "title": {
                  "element": "string",
                  "content": "Hello API"
                }
              },
              "content": [
                {
                  "element": "category",
                  "meta": {
                    "classes": {
                      "element": "array",
                      "content": [
                        {
                          "element": "string",
                          "content": "resourceGroup"
                        }
                      ]
                    },
                    "title": {
                      "element": "string",
                      "content": ""
                    }
                  },
                  "content": [
                    {
                      "element": "resource",
                      "meta": {
                        "title": {
                          "element": "string",
                          "content": ""
                        }
                      },
                      "attributes": {
                        "href": {
                          "element": "string",
                          "content": "/message"
                        }
                      },
                      "content": [
                        {
                          "element": "transition",
                          "meta": {
                            "title": {
                              "element": "string",
                              "content": ""
                            }
                          },
                          "content": [
                            {
                              "element": "httpTransaction",
                              "content": [
                                {
                                  "element": "httpRequest",
                                  "attributes": {
                                    "method": {
                                      "element": "string",
                                      "content": "GET"
                                    }
                                  },
                                  "content": []
                                },
                                {
                                  "element": "httpResponse",
                                  "attributes": {
                                    "statusCode": {
                                      "element": "string",
                                      "content": "200"
                                    },
                                    "headers": {
                                      "element": "httpHeaders",
                                      "content": [
                                        {
                                          "element": "member",
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "Content-Type"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "text/plain"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "asset",
                                      "meta": {
                                        "classes": {
                                          "element": "array",
                                          "content": [
                                            {
                                              "element": "string",
                                              "content": "messageBody"
                                            }
                                          ]
                                        }
                                      },
                                      "attributes": {
                                        "contentType": {
                                          "element": "string",
                                          "content": "text/plain"
                                        }
                                      },
                                      "content": "Hello World!\n"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }

+ Response 200 (text/vnd.apiblueprint)

        FORMAT: 1A

        # Hello API

        ## Group 

        ### /message

        #### GET

        + Response 200 (text/plain)

                Hello World!


+ Request Compose API Blueprint from API Elements 0.6 Parse Result (application/vnd.refract.parse-result+json; version=0.6)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "api"
                ],
                "title": "Hello API"
              },
              "content": [
                {
                  "element": "category",
                  "meta": {
                    "classes": [
                      "resourceGroup"
                    ],
                    "title": ""
                  },
                  "content": [
                    {
                      "element": "resource",
                      "meta": {
                        "title": ""
                      },
                      "attributes": {
                        "href": "/message"
                      },
                      "content": [
                        {
                          "element": "transition",
                          "meta": {
                            "title": ""
                          },
                          "content": [
                            {
                              "element": "httpTransaction",
                              "content": [
                                {
                                  "element": "httpRequest",
                                  "attributes": {
                                    "method": "GET"
                                  },
                                  "content": []
                                },
                                {
                                  "element": "httpResponse",
                                  "attributes": {
                                    "statusCode": "200",
                                    "headers": {
                                      "element": "httpHeaders",
                                      "content": [
                                        {
                                          "element": "member",
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "Content-Type"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "text/plain"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "asset",
                                      "meta": {
                                        "classes": [
                                          "messageBody"
                                        ]
                                      },
                                      "attributes": {
                                        "contentType": "text/plain"
                                      },
                                      "content": "Hello World!\n"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }

+ Response 200 (text/vnd.apiblueprint)

        FORMAT: 1A

        # Hello API

        ## Group 

        ### /message

        #### GET

        + Response 200 (text/plain)

                Hello World!


+ Request Unknown Refract Version (application/vnd.refract.parse-result+json; version=2.0)

        {}

+ Response 415 (application/vnd.error+json)
    + Attributes
        + statusCode: 415 (number)
        + message: ``Unsupported Refract Serialisation version `2.0`. Supported: 0.6, 1.0.``
        + name: Rest Error

+ Request Unknown Content Type (application/vnd.apiblueprint.ast+json)

        {}

+ Response 415 (application/vnd.error+json)
    + Attributes
        + statusCode: 415 (number)
        + message: ``Unsupported Content-Type `application/vnd.apiblueprint.ast+json`. Supported: application/vnd.refract+json, application/vnd.refract.parse-result+json. API Blueprint AST is no longer supported.``
        + name: Rest Error

### Validate [POST /validate]

Validation allows you to validate an API Description Document for validity. The
following document types are supported:

- `text/vnd.apiblueprint`
- `text/vnd.legacyblueprint`
- `application/swagger+json`
- `application/swagger+yaml`

+ Request Validate API Blueprint without warning or error (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result without version (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 0.6 (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 1.0 (application/json)

        {
          "input_document": "# Hello API\n## /message\n### GET\n+ Response 200 (text/plain)\n\n        Hello World!\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint with a warning (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        18,
                        14
                      ]
                    ]
                  }
                ]
              },
              "content": "no parameters specified, expected a nested list of parameters, one parameter per list item"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result without version (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        18,
                        14
                      ]
                    ]
                  }
                ]
              },
              "content": "no parameters specified, expected a nested list of parameters, one parameter per list item"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result 0.6 (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        18,
                        14
                      ]
                    ]
                  }
                ]
              },
              "content": "no parameters specified, expected a nested list of parameters, one parameter per list item"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result 1.0 (application/json)

        {
          "input_document": "# Hello\n\n# GET /\n\n+ Parameters\n\n+ Response 204\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "warning"
                    }
                  ]
                }
              },
              "attributes": {
                "code": {
                  "element": "number",
                  "content": 3
                },
                "sourceMap": {
                  "element": "array",
                  "content": [
                    {
                      "element": "sourceMap",
                      "content": [
                        {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 18
                            },
                            {
                              "element": "number",
                              "content": 14
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "content": "no parameters specified, expected a nested list of parameters, one parameter per list item"
            }
          ]
        }

+ Request Validate API Blueprint with an error (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        39,
                        9
                      ]
                    ]
                  }
                ]
              },
              "content": "base type 'A' circularly referencing itself"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result without version (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        39,
                        9
                      ]
                    ]
                  }
                ]
              },
              "content": "base type 'A' circularly referencing itself"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 0.6 (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        39,
                        9
                      ]
                    ]
                  }
                ]
              },
              "content": "base type 'A' circularly referencing itself"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 1.0 (application/json)

        {
          "input_document": "FORMAT: 1A\n\n# Hello\n\n# Data Structures\n## A (A)\n",
          "input_type": "text/vnd.apiblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                }
              },
              "attributes": {
                "code": {
                  "element": "number",
                  "content": 4
                },
                "sourceMap": {
                  "element": "array",
                  "content": [
                    {
                      "element": "sourceMap",
                      "content": [
                        {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 39
                            },
                            {
                              "element": "number",
                              "content": 9
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "content": "base type 'A' circularly referencing itself"
            }
          ]
        }

+ Request Validate Swagger YAML without warning or error (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        204:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate Swagger YAML with a warning (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        167,
                        46
                      ]
                    ]
                  }
                ]
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        167,
                        46
                      ]
                    ]
                  }
                ]
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        167,
                        46
                      ]
                    ]
                  }
                ]
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n  version: '2.0'\npaths:\n  '/test':\n    get:\n      summary: Test get\n      description: Test description\n      responses:\n        default:\n          description: Test response\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "warning"
                    }
                  ]
                },
                "links": {
                  "element": "array",
                  "content": [
                    {
                      "element": "link",
                      "attributes": {
                        "relation": {
                          "element": "string",
                          "content": "origin"
                        },
                        "href": {
                          "element": "string",
                          "content": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                        }
                      },
                      "content": []
                    }
                  ]
                }
              },
              "attributes": {
                "code": {
                  "element": "number",
                  "content": 3
                },
                "sourceMap": {
                  "element": "array",
                  "content": [
                    {
                      "element": "sourceMap",
                      "content": [
                        {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 167
                            },
                            {
                              "element": "number",
                              "content": 46
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate Swagger YAML with an error (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#swagger-validation"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        15,
                        23
                      ]
                    ]
                  }
                ]
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result without version (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#swagger-validation"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        15,
                        23
                      ]
                    ]
                  }
                ]
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 0.6 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#swagger-validation"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        15,
                        23
                      ]
                    ]
                  }
                ]
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 1.0 (application/json)

        {
          "input_document": "swagger: '2.0'\ninfo:\n  title: Swagger\n",
          "input_type": "application/swagger+yaml",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                },
                "links": {
                  "element": "array",
                  "content": [
                    {
                      "element": "link",
                      "attributes": {
                        "relation": {
                          "element": "string",
                          "content": "origin"
                        },
                        "href": {
                          "element": "string",
                          "content": "http://docs.apiary.io/validations/swagger#swagger-validation"
                        }
                      },
                      "content": []
                    }
                  ]
                }
              },
              "attributes": {
                "code": {
                  "element": "number",
                  "content": 4
                },
                "sourceMap": {
                  "element": "array",
                  "content": [
                    {
                      "element": "sourceMap",
                      "content": [
                        {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 15
                            },
                            {
                              "element": "number",
                              "content": 23
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate Swagger JSON without warning or error (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate Swagger JSON with a warning (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        234,
                        67
                      ]
                    ]
                  }
                ]
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        234,
                        67
                      ]
                    ]
                  }
                ]
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "warning"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 3,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        234,
                        67
                      ]
                    ]
                  }
                ]
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate API Blueprint with a warning into parse result 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n    \"version\": \"2.0\"\n  },\n  \"paths\": {\n    \"/test\": {\n      \"get\": {\n        \"summary\": \"Test get\",\n        \"description\": \"Test description\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"Test response\"\n          }\n        }\n      }\n    }\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "warning"
                    }
                  ]
                },
                "links": {
                  "element": "array",
                  "content": [
                    {
                      "element": "link",
                      "attributes": {
                        "relation": {
                          "element": "string",
                          "content": "origin"
                        },
                        "href": {
                          "element": "string",
                          "content": "http://docs.apiary.io/validations/swagger#refract-not-supported"
                        }
                      },
                      "content": []
                    }
                  ]
                }
              },
              "attributes": {
                "code": {
                  "element": "number",
                  "content": 3
                },
                "sourceMap": {
                  "element": "array",
                  "content": [
                    {
                      "element": "sourceMap",
                      "content": [
                        {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 234
                            },
                            {
                              "element": "number",
                              "content": 67
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "content": "Default response is not yet supported"
            }
          ]
        }

+ Request Validate Swagger JSON with an error (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#swagger-validation"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        24,
                        37
                      ]
                    ]
                  }
                ]
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result without version (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#swagger-validation"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        24,
                        37
                      ]
                    ]
                  }
                ]
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 0.6 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ],
                "links": [
                  {
                    "element": "link",
                    "attributes": {
                      "relation": "origin",
                      "href": "http://docs.apiary.io/validations/swagger#swagger-validation"
                    },
                    "content": []
                  }
                ]
              },
              "attributes": {
                "code": 4,
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        24,
                        37
                      ]
                    ]
                  }
                ]
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 1.0 (application/json)

        {
          "input_document": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Swagger\",\n  }\n}\n",
          "input_type": "application/swagger+json",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                },
                "links": {
                  "element": "array",
                  "content": [
                    {
                      "element": "link",
                      "attributes": {
                        "relation": {
                          "element": "string",
                          "content": "origin"
                        },
                        "href": {
                          "element": "string",
                          "content": "http://docs.apiary.io/validations/swagger#swagger-validation"
                        }
                      },
                      "content": []
                    }
                  ]
                }
              },
              "attributes": {
                "code": {
                  "element": "number",
                  "content": 4
                },
                "sourceMap": {
                  "element": "array",
                  "content": [
                    {
                      "element": "sourceMap",
                      "content": [
                        {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 24
                            },
                            {
                              "element": "number",
                              "content": 37
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "content": "Missing required property: version"
            }
          ]
        }

+ Request Validate Apiary Blueprint without error (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result without version (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 0.6 (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate API Blueprint without warning or error into parse result 1.0 (application/json)

        {
          "input_document": "--- Sample API ---\nGET /message\n< 200\n< Content-Type: text/plain\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": []
        }

+ Request Validate Apiary Blueprint with an error (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ]
              },
              "attributes": {
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        31,
                        1
                      ]
                    ]
                  }
                ]
              },
              "content": "Expected \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"MKCOL\", \"MOVE\", \"OPTIONS\", \"PATCH\", \"POST\", \"PROPPATCH\", \"PUT\" or \"UNLOCK\" but end of input found."
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result without version (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ]
              },
              "attributes": {
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        31,
                        1
                      ]
                    ]
                  }
                ]
              },
              "content": "Expected \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"MKCOL\", \"MOVE\", \"OPTIONS\", \"PATCH\", \"POST\", \"PROPPATCH\", \"PUT\" or \"UNLOCK\" but end of input found."
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 0.6 (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=0.6"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": [
                  "error"
                ]
              },
              "attributes": {
                "sourceMap": [
                  {
                    "element": "sourceMap",
                    "content": [
                      [
                        31,
                        1
                      ]
                    ]
                  }
                ]
              },
              "content": "Expected \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"MKCOL\", \"MOVE\", \"OPTIONS\", \"PATCH\", \"POST\", \"PROPPATCH\", \"PUT\" or \"UNLOCK\" but end of input found."
            }
          ]
        }

+ Request Validate API Blueprint with an error into parse result 1.0 (application/json)

        {
          "input_document": "--- API ---\n< 200\nHello World!\n",
          "input_type": "text/vnd.legacyblueprint",
          "output_type": "application/vnd.refract.parse-result+json; version=1.0"
        }

+ Response 422 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "annotation",
              "meta": {
                "classes": {
                  "element": "array",
                  "content": [
                    {
                      "element": "string",
                      "content": "error"
                    }
                  ]
                }
              },
              "attributes": {
                "sourceMap": {
                  "element": "array",
                  "content": [
                    {
                      "element": "sourceMap",
                      "content": [
                        {
                          "element": "array",
                          "content": [
                            {
                              "element": "number",
                              "content": 31
                            },
                            {
                              "element": "number",
                              "content": 1
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "content": "Expected \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"MKCOL\", \"MOVE\", \"OPTIONS\", \"PATCH\", \"POST\", \"PROPPATCH\", \"PUT\" or \"UNLOCK\" but end of input found."
            }
          ]
        }

+ Request Missing Input Type (application/json)

        {
          "input_document": "# API"
        }

+ Response 415 (application/vnd.error+json)

        {
          "message": "Missing input type (`input_type`)"
        }

+ Request Unknown Input Type (application/json)

        {
          "input_document": "# API",
          "input_type": "application/raml+yaml"
        }

+ Response 415 (application/vnd.error+json)

        {
          "message": "Unsupported input type `application/raml+yaml`. Supported: text/vnd.legacyblueprint, text/vnd.apiblueprint, application/swagger+json, application/swagger+yaml"
        }

+ Request Missing Input Document (application/json)

        {
          "input_type": "text/vnd.apiblueprint"
        }

+ Response 400 (application/vnd.error+json)

        {
          "message": "Missing input document (`input_document`)"
        }

## API Description Vault [/vault?{threshold,parsed}]

Vault is a rolling buffer of API Description documents stored in the parsing service's associated mongodb server as a capped collection. Whenever an API description document is requested to be parsed, it will be added to the mongodb capped collection in a specific format.

If the parsing of the API document is successful without any crash, the document stored in the collection will be updated to reflect the parsing status and the time of the parsing.

The document which is to be stored in the vault will be in the following format:

```json
{
  "doc": ".... Encrypted API Description document here ....",
  "parsed": 0,                        // If doc is parsed
  "valid": 0,                         // If doc is parsed without error
  "time": 999,                        // Time taken for the parsing,
  "input_format": "application/...",  // Input format which was detected
  "output_format": "application/..."  // Output format which was requested
}
```

### Upload Vault to S3 [POST]

When this endpoint is called, all the existing API Description documents which are stored in the vault and that match the requested criteria are uploaded to Amazon S3. The details of S3 are as follows:

Bucket: `apiary-plutonium-vault`
Path: `{hostname}/{date}`

Where `hostname` is the hostname of the current service and `date` is an ISO format of `YYYY-MM-DD_HH-mm-ss`

+ Parameters
    + threshold: 300 (number, optional) - Select documents whose parsing time in milliseconds exceeeds this
    + parsed: 1 (number, optional) - Select documents which are parsed if 1, 0 otherwise

+ Request Empty Body

+ Response 201 (application/json)
    + Attributes (object)
        + count: 10 (number) - Number of documents dumped